// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let isChecking = false;
let logData = "";
let logUpdateInterval = null;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const checkForm = document.getElementById('checkForm');
const startCheckBtn = document.getElementById('startCheck');
const stopCheckBtn = document.getElementById('stopCheck');
const clearLogsBtn = document.getElementById('clearLogs');
const downloadLogsBtn = document.getElementById('downloadLogs');
const refreshDataBtn = document.getElementById('refreshData');
const statusMessage = document.getElementById('statusMessage');
const progressFill = document.getElementById('progressFill');
const logContent = document.getElementById('logContent');
const globalStats = document.getElementById('globalStats');
const channelsData = document.getElementById('channelsData');
const exportedFiles = document.getElementById('exportedFiles');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', function () {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    loadInitialData();

    // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    checkForm.addEventListener('submit', startCheck);
    stopCheckBtn.addEventListener('click', stopCheck);
    clearLogsBtn.addEventListener('click', clearLogs);
    downloadLogsBtn.addEventListener('click', downloadLogs);
    refreshDataBtn.addEventListener('click', loadInitialData);

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    setInterval(updateCheckStatus, 2000);
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function loadInitialData() {
    loadGlobalStats();
    loadChannelsData();
    loadExportedFiles();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
function updateCheckStatus() {
    fetch('/api/check/status')
        .then(response => response.json())
        .then(data => {
            isChecking = data.isChecking;
            if (isChecking) {
                startCheckBtn.disabled = true;
                stopCheckBtn.disabled = false;
                // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                updateLogs();
            } else {
                startCheckBtn.disabled = false;
                stopCheckBtn.disabled = true;
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
        });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤
function updateLogs() {
    fetch('/api/logs?limit=50')
        .then(response => response.json())
        .then(data => {
            if (data.logs && data.logs.length > 0) {
                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
                logContent.textContent = data.logs.join('\n');
                logContent.scrollTop = logContent.scrollHeight;
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤:', error);
        });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function loadGlobalStats() {
    fetch('/api/data/latest')
        .then(response => {
            if (!response.ok) {
                throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
            }
            return response.json();
        })
        .then(data => {
            if (data.summary) {
                globalStats.innerHTML = `
                    <ul>
                        <li>üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤: <strong>${data.summary.total_channels}</strong></li>
                        <li>‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: <strong>${data.summary.completed_channels}</strong></li>
                        <li>‚è± –û–±—â–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <strong>${data.summary.duration_seconds || 'N/A'} —Å–µ–∫—É–Ω–¥</strong></li>
                        <li>üìà –í—Å–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: <strong>${data.summary.total_segments}</strong></li>
                        <li>‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: <strong>${data.summary.successful_downloads}</strong></li>
                        <li>‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: <strong>${data.summary.failed_downloads}</strong></li>
                        <li>üéØ –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: <strong>${data.summary.overall_success_rate}%</strong></li>
                        <li>üì° –û–±—â–∏–π –æ–±—ä—ë–º –¥–∞–Ω–Ω—ã—Ö: <strong>${data.summary.total_data_mb || 0} MB</strong></li>
                    </ul>
                `;

                // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Ä–µ—Å—É—Ä—Å–∞–º –µ—Å–ª–∏ –µ—Å—Ç—å
                if (data.analytics && data.analytics.resource_summary) {
                    const resourceSummary = data.analytics.resource_summary;
                    globalStats.innerHTML += `
                        <div class="resource-summary">
                            <h4>üñ•Ô∏è –°–≤–æ–¥–∫–∞ –ø–æ —Ä–µ—Å—É—Ä—Å–∞–º:</h4>
                            <ul>
                                <li>üìà –°—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: <strong>${resourceSummary.cpu_average || 0}%</strong> (${resourceSummary.cpu_absolute_average || 0}% –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ${resourceSummary.cpu_count || 0} —è–¥–µ—Ä)</li>
                                <li>üìà –°—Ä–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: <strong>${resourceSummary.memory_average_percent || 0}%</strong> (${resourceSummary.memory_average_mb || 0} MB –∏–∑ ${resourceSummary.memory_total_mb || 0} MB –≤—Å–µ–≥–æ)</li>
                                <li>üî• –ü–∏–∫–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: <strong>${resourceSummary.cpu_peak || 0}%</strong> (${resourceSummary.cpu_absolute_peak || 0}% –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ${resourceSummary.cpu_count || 0} —è–¥–µ—Ä)</li>
                                <li>üî• –ü–∏–∫–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: <strong>${resourceSummary.memory_peak_percent || 0}%</strong> (${resourceSummary.memory_peak_mb || 0} MB –∏–∑ ${resourceSummary.memory_total_mb || 0} MB –≤—Å–µ–≥–æ)</li>
                                <li>üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π: <strong>${resourceSummary.measurements_count || 0}</strong></li>
                            </ul>
                        </div>
                    `;
                }
            } else {
                globalStats.innerHTML = '<p>–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...</p>';
            }
        })
        .catch(error => {
            globalStats.innerHTML = '<p>–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...</p>';
        });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞–Ω–∞–ª–∞–º
function loadChannelsData() {
    fetch('/api/data/latest')
        .then(response => {
            if (!response.ok) {
                throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
            }
            return response.json();
        })
        .then(data => {
            if (data.channels && data.channels.length > 0) {
                let channelsHtml = '<ul>';
                data.channels.forEach(channel => {
                    const successRate = channel.stats.success_rate;
                    const className = successRate >= 90 ? 'success' : (successRate >= 70 ? 'warning' : 'error');
                    channelsHtml += `
                        <li class="${className}">
                            üì∫ ${channel.name}: <strong>${successRate}%</strong> —É—Å–ø–µ—Ö–∞, ${channel.stats.total_data_mb || 0} MB –¥–∞–Ω–Ω—ã—Ö
                        </li>
                    `;
                });
                channelsHtml += '</ul>';
                channelsData.innerHTML = channelsHtml;
            } else {
                channelsData.innerHTML = '<p>–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...</p>';
            }
        })
        .catch(error => {
            channelsData.innerHTML = '<p>–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...</p>';
        });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function loadExportedFiles() {
    fetch('/api/data/files')
        .then(response => response.json())
        .then(data => {
            let filesHtml = '<ul>';

            // –î–æ–±–∞–≤–ª—è–µ–º CSV —Ñ–∞–π–ª—ã
            if (data.csv && data.csv.length > 0) {
                filesHtml += '<h4>CSV –æ—Ç—á–µ—Ç—ã:</h4>';
                data.csv.forEach(file => {
                    filesHtml += `
                        <li>
                            <a href="${file.path}" target="_blank" download>${file.name}</a> 
                            (${(file.size / 1024).toFixed(1)} KB)
                        </li>
                    `;
                });
            }

            // –î–æ–±–∞–≤–ª—è–µ–º JSON —Ñ–∞–π–ª—ã
            if (data.json && data.json.length > 0) {
                filesHtml += '<h4>JSON –¥–∞–Ω–Ω—ã–µ:</h4>';
                data.json.forEach(file => {
                    filesHtml += `
                        <li>
                            <a href="${file.path}" target="_blank" download>${file.name}</a> 
                            (${(file.size / 1024).toFixed(1)} KB)
                        </li>
                    `;
                });
            }

            if (data.csv.length === 0 && data.json.length === 0) {
                filesHtml += '<li>–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã</li>';
            }

            filesHtml += '</ul>';
            exportedFiles.innerHTML = filesHtml;
        })
        .catch(error => {
            exportedFiles.innerHTML = '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤</p>';
        });
}

// –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏
function startCheck(e) {
    e.preventDefault();

    if (isChecking) return;

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã
    const channelCount = document.getElementById('channelCount').value;
    const duration = document.getElementById('duration').value;
    const refreshPlaylist = document.getElementById('refreshPlaylist').checked;
    const exportData = document.getElementById('exportData').checked;

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const requestData = {
        channelCount: channelCount,
        duration: parseInt(duration),
        refreshPlaylist: refreshPlaylist,
        exportData: exportData,
        monitorInterval: 30  // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
    fetch('/api/check', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
    })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'started') {
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
                isChecking = true;
                startCheckBtn.disabled = true;
                stopCheckBtn.disabled = false;
                statusMessage.textContent = "üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ HLS –ø–æ—Ç–æ–∫–æ–≤...";
                logContent.textContent = "üì• –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ...\n";

                // –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤
                if (logUpdateInterval) {
                    clearInterval(logUpdateInterval);
                }
                logUpdateInterval = setInterval(updateLogs, 2000);
            } else {
                statusMessage.textContent = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏";
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
            statusMessage.textContent = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: " + error.message;
        });
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
function stopCheck() {
    if (!isChecking) return;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏
    fetch('/api/check/stop', {
        method: 'POST'
    })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'stopped') {
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
                isChecking = false;
                startCheckBtn.disabled = false;
                stopCheckBtn.disabled = true;
                statusMessage.textContent = "‚èπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º";

                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤
                if (logUpdateInterval) {
                    clearInterval(logUpdateInterval);
                    logUpdateInterval = null;
                }

                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
                setTimeout(() => {
                    loadInitialData();
                }, 1000);
            } else {
                statusMessage.textContent = "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏";
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
            statusMessage.textContent = "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏: " + error.message;
        });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
function addLogEntry(message) {
    const timestamp = new Date().toLocaleTimeString();
    logData += `[${timestamp}] ${message}\n`;
    logContent.textContent = logData;
    logContent.scrollTop = logContent.scrollHeight;
}

// –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
function clearLogs() {
    logData = "";
    logContent.textContent = "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã.";
}

// –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤
function downloadLogs() {
    fetch('/api/logs')
        .then(response => response.json())
        .then(data => {
            const logText = data.logs.join('\n');
            const blob = new Blob([logText], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `hls_check_logs_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.txt`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤:', error);
        });
}