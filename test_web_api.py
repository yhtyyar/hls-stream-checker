#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–± API HLS Stream Checker
"""

import requests
import time
import json

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoint'–æ–≤ API"""
    base_url = "http://localhost:5000"
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–± API HLS Stream Checker")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try:
        response = requests.get(f"{base_url}/")
        print(f"‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        response = requests.get(f"{base_url}/api/config")
        if response.status_code == 200:
            config_data = response.json()
            print(f"‚úÖ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {response.status_code}")
            print(f"   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config_data.get('defaultChannelCount')}")
            print(f"   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config_data.get('defaultDurationMinutes')} –º–∏–Ω—É—Ç")
        else:
            print(f"‚ùå API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
    try:
        response = requests.get(f"{base_url}/api/check/status")
        if response.status_code == 200:
            status_data = response.json()
            print(f"‚úÖ API —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {response.status_code}")
            print(f"   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞: {status_data.get('isChecking')}")
            print(f"   - –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω: {status_data.get('isProcessRunning')}")
        else:
            print(f"‚ùå API —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ª–æ–≥–æ–≤
    try:
        response = requests.get(f"{base_url}/api/logs")
        if response.status_code == 200:
            logs_data = response.json()
            print(f"‚úÖ API –ª–æ–≥–æ–≤: {response.status_code}")
            print(f"   - –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–∞—Ö: {logs_data.get('total', 0)}")
        else:
            print(f"‚ùå API –ª–æ–≥–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API –ª–æ–≥–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –¥–∞–Ω–Ω—ã—Ö
    try:
        response = requests.get(f"{base_url}/api/data/files")
        if response.status_code == 200:
            files_data = response.json()
            print(f"‚úÖ API —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            print(f"   - CSV —Ñ–∞–π–ª–æ–≤: {len(files_data.get('csv', []))}")
            print(f"   - JSON —Ñ–∞–π–ª–æ–≤: {len(files_data.get('json', []))}")
        else:
            print(f"‚ùå API —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    print("=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    test_api_endpoints()