#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email –æ—Ç—á–µ—Ç–æ–≤ –≤ HLS Stream Checker
"""

import logging
import os
import smtplib
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from pathlib import Path
from typing import List, Optional

logger = logging.getLogger(__name__)

class EmailSender:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email –æ—Ç—á–µ—Ç–æ–≤"""
    
    def __init__(self, smtp_host: str = "localhost", smtp_port: int = 25):
        self.smtp_host = smtp_host
        self.smtp_port = smtp_port
        
    def create_report_email(
        self,
        to_email: str,
        subject: str,
        body: str,
        attachments: List[Path]
    ) -> MIMEMultipart:
        """–°–æ–∑–¥–∞–µ—Ç email —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç—á–µ—Ç–æ–º"""
        msg = MIMEMultipart()
        msg["Subject"] = subject
        msg["From"] = "HLS Stream Checker <noreply@hls-checker.local>"
        msg["To"] = to_email
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        msg.attach(MIMEText(body, "plain"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
        for attachment in attachments:
            if not attachment.exists():
                logger.warning(f"–§–∞–π–ª –≤–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {attachment}")
                continue
                
            # –°–æ–∑–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ
            with open(attachment, "rb") as f:
                part = MIMEBase("application", "octet-stream")
                part.set_payload(f.read())
            
            # –ö–æ–¥–∏—Ä—É–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ
            encoders.encode_base64(part)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            part.add_header(
                "Content-Disposition",
                f"attachment; filename={attachment.name}"
            )
            msg.attach(part)
        
        return msg
    
    def send_report(
        self,
        to_email: str,
        subject: str,
        body: str,
        attachments: List[Path]
    ) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —Å –æ—Ç—á–µ—Ç–æ–º"""
        try:
            msg = self.create_report_email(to_email, subject, body, attachments)
            
            with smtplib.SMTP(self.smtp_host, self.smtp_port) as server:
                server.send_message(msg)
                
            logger.info("üìß –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ %s", to_email)
            return True
            
        except Exception as e:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞: %s", e)
            return False
